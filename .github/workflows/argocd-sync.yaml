name: Sync ArgoCD Application

on:
  push:
    branches:
      - master
    paths:
      - "argocd/**"
jobs:
  create_or_update_argocd:
    runs-on: home-ubuntu
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Install ArgoCD CLI
      #   run: |
      #     curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
      #     sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd

      - name: Authenticate with ArgoCD
        run: |
          # Assuming the ArgoCD server is accessible via API server and kubectl is already configured
          argocd login ${{ secrets.ARGOCD_SERVER_INTERNAL }} \
          --username ${{ secrets.ARGOCD_USERNAME }} \
          --password ${{ secrets.ARGOCD_PASSWORD }} \
          --insecure

      - name: Deploy services
        run: |
          for SERVICE_DIR in argocd/*/; do
          SERVICE=$(basename "$SERVICE_DIR")
          SERVICE_REPO="${{ github.server_url }}/${{ github.repository_owner }}/$SERVICE.git"
          echo "Processing service: $SERVICE in repo: $SERVICE_REPO"

          # for ENV in prod nas; do
          for ENV in nas; do
            if [[ -d "$SERVICE_DIR/$ENV" ]]; then
              APP_NAME="$SERVICE-$ENV"
              echo "Ensuring $APP_NAME app exists for $ENV environment"
              if ! argocd app get "$APP_NAME" >/dev/null 2>&1; then
                ls
                echo "Creating $APP_NAME application..."
                argocd app create "$APP_NAME" \
                  --repo ${{ github.server_url }}/${{ github.repository }} \
                  --path "argocd/$SERVICE/$ENV" \
                  --dest-server https://kubernetes.default.svc \
                  --dest-namespace $ENV \
                  --sync-policy automated \
                  --auto-prune \
                  --self-heal
                  
                echo "$APP_NAME application created successfully"
                echo "Syncing $APP_NAME application..."
                argocd app sync "$APP_NAME"
              else
                echo "$APP_NAME application already exists"
              fi
            fi
          done
          done
